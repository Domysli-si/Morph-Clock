
#include "TinyFont.h"

TFFace tinyFont[] = 
{
  //space
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //!
  {
    //pixels
    {
      0b00001000,
      0b00001000,
      0b00001000,
      0b00000000,
      0b00001000,
    },
  },
  //"
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //#
  {
    //pixels
    {
      0b00001010,
      0b00011111,
      0b00001010,
      0b00011111,
      0b00001010,
    },
  },
  //$
  {
    //pixels
    {
      0b00001110,
      0b00001100,
      0b00001110,
      0b00000110,
      0b00001110,
    },
  },
  //%
  {
    //pixels
    {
      0b00001010,
      0b00000010,
      0b00000100,
      0b00001000,
      0b00001010,
    },
  },
  //&
  {
    //pixels
    {
      0b00001110,
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001111,
    },
  },
  //'
  {
    //pixels
    {
      0b00000100,
      0b00000100,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //(
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //)
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //*
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //+
  {
    //pixels
    {
      0b00000000,
      0b00000100,
      0b00001110,
      0b00000100,
      0b00000000,
    },
  },
  //,
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000100,
      0b00001000,
    },
  },
  //-
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00001110,
      0b00000000,
      0b00000000,
    },
  },
  //.
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000100,
    },
  },
  ///
  {
    //pixels
    {
      0b00000010,
      0b00000010,
      0b00000100,
      0b00001000,
      0b00001000,
    },
  },
  //0
  {
    //pixels
    {
      0b00001110,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001110,
    },
  },
  //1
  {
    //pixels
/*    {
      0b00000010,
      0b00000010,
      0b00000010,
      0b00000010,
      0b00000010,
    },
*/
  // Changed the number one to be more proportional GQ
    {
      0b00000100,
      0b00001100,
      0b00000100,
      0b00000100,
      0b00001110,
    },
  },
  //2
  {
    //pixels
    {
      0b00001110,
      0b00000010,
      0b00001110,
      0b00001000,
      0b00001110,
    },
  },
  //3
  {
    //pixels
    {
      0b00001110,
      0b00000010,
      0b00001110,
      0b00000010,
      0b00001110,
    },
  },
  //4
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001110,
      0b00000010,
      0b00000010,
    },
  },
  //5
  {
    //pixels
    {
      0b00001110,
      0b00001000,
      0b00001110,
      0b00000010,
      0b00001110,
    },
  },
  //6
  {
    //pixels
    {
      0b00001000,
      0b00001000,
      0b00001110,
      0b00001010,
      0b00001110,
    },
  },
  //7
  {
    //pixels
    {
      0b00001110,
      0b00000010,
      0b00000010,
      0b00000010,
      0b00000010,
    },
  },
  //8
  {
    //pixels
    {
      0b00001110,
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001110,
    },
  },
  //9
  {
    //pixels
    {
      0b00001110,
      0b00001010,
      0b00001110,
      0b00000010,
      0b00000010,
    },
  },
  //:
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //;
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //<
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //=
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //>
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //?
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //@
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //A
  {
    //pixels
    {
      0b00000100,
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001010,
    },
  },
  //B
  {
    //pixels
    {
      0b00001100,
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001110,
    },
  },
  //C
  {
    //pixels
    {
      0b00001110,
      0b00001000,
      0b00001000,
      0b00001000,
      0b00001110,
    },
  },
  //D
  {
    //pixels
    {
      0b00001100,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001110,
    },
  },
  //E
  {
    //pixels
    {
      0b00001110,
      0b00001000,
      0b00001110,
      0b00001000,
      0b00001110,
    },
  },
  //F
  {
    //pixels
    {
      0b00001110,
      0b00001000,
      0b00001100,
      0b00001000,
      0b00001000,
    },
  },
  //G
  {
    //pixels
    {
      0b00001100,
      0b00001000,
      0b00001110,
      0b00001010,
      0b00001110,
    },
  },
  //H
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001010,
    },
  },
  //I
  {
    //pixels
    {
      0b00000100,
      0b00000100,
      0b00000100,
      0b00000100,
      0b00000100,
    },
  },
  //J
  {
    //pixels
    {
      0b00000010,
      0b00000010,
      0b00000010,
      0b00001010,
      0b00001110,
    },
  },
  //K
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001100,
      0b00001010,
      0b00001010,
    },
  },
  //L
  {
    //pixels
    {
      0b00001000,
      0b00001000,
      0b00001000,
      0b00001000,
      0b00001110,
    },
  },
  //M
  {
    //pixels
    {
      0b00001010,
      0b00001110,
      0b00001010,
      0b00001010,
      0b00001010,
    },
  },
  //N
  {
    //pixels
  {
      0b00001110,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001010,
  },
  },
  //O
  {
    //pixels
    {
      0b00000100,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00000100,
    },
  },
  //P
  {
    //pixels
    {
      0b00001100,
      0b00001010,
      0b00001100,
      0b00001000,
      0b00001000,
    },
  },
  //Q
  {
    //pixels
    {
      0b00000100,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00000101,
    },
  },
  //R
  {
    //pixels
    {
      0b00001100,
      0b00001010,
      0b00001100,
      0b00001010,
      0b00001010,
    },
  },
  //S
  {
    //pixels
    {
      0b00001110,
      0b00001000,
      0b00001110,
      0b00000010,
      0b00001110,
    },
  },
  //T
  {
    //pixels
    {
      0b00001110,
      0b00000100,
      0b00000100,
      0b00000100,
      0b00000100,
    },
  },
  //U
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001110,
    },
  },
  //V
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001010,
      0b00000100,
    },
  },
  //W
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00001010,
      0b00001110,
      0b00001010,
    },
  },
  //X
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00000100,
      0b00001010,
      0b00001010,
    },
  },
  //Y
  {
    //pixels
    {
      0b00001010,
      0b00001010,
      0b00000100,
      0b00000100,
      0b00000100,
    },
  },
  //Z
  {
    //pixels
    {
      0b00001110,
      0b00000010,
      0b00001110,
      0b00001000,
      0b00001110,
    },
  },
  //[
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //]
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //^
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //_
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //`
  {
    //pixels
    {
      0b00001010,
      0b00011111,
      0b00011111,
      0b00001110,
      0b00000100,
    },
  },
  //a
  {
    //pixels
    {
      0b00000010,
      0b00001000,
      0b00000011,
      0b00010111,
      0b00000111,
    },
  },
  //b
  {
    //pixels
    {
      0b00001000,
      0b00000010,
      0b00011000,
      0b00011101,
      0b00011100,
    },
  },
  //c
  {
    //pixels
    {
      0b00000000,
      0b00000110,
      0b00001111,
      0b00001111,
      0b00000111,
    },
  },
  //d
  {
    //pixels
    {
      0b00001100,
      0b00011110,
      0b00011110,
      0b00011110,
      0b00011100,
    },
  },
  //e
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //f
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //g
  {
    //pixels
    {
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
      0b00000000,
    },
  },
  //h
  {
    //pixels
    {
      0b00000110,
      0b00001111,
      0b00001111,
      0b00000111,
      0b00000001,
    },
  },
  //i
  {
    //pixels
    {
      0b000000110,
      0b000001111,
      0b000001111,
      0b000001110,
      0b000001000,
    },
  },
};

const int cfblack = 0;

void TFDrawChar (PxMATRIX* d, char value, char xo, char yo, int col)
{
  int i, j, cfi = value - ' ';
  if (cfi > sizeof (tinyFont) / sizeof (TFFace))
  {
    Serial.print ("character code not supported: ");
    Serial.println (cfi + ' ');
  }
  else
    for (i = 0; i < TF_ROWS; i++)
    {
      for (j = 0; j < TF_COLS; j++)
      {
        if (tinyFont[cfi].fface[i] & (1 << j))
          d->drawPixel (xo + TF_COLS - j, yo + i, col);
        else
          d->drawPixel (xo + TF_COLS - j, yo + i, cfblack);
      }
    }
}

#define TFLINE_LEN  (64 / TF_COLS)
void TFDrawText (PxMATRIX* d, String text, char xo, char yo, int col)
{
  unsigned char lbuf[TFLINE_LEN+1] = {0};
  unsigned char *lptr = lbuf;
  text.getBytes (lbuf, TFLINE_LEN);
  for (; *lptr; lptr++, xo += TF_COLS)
  {
    TFDrawChar (d, *lptr, xo, yo, col);
  }
}
